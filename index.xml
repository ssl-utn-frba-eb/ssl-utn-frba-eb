<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Homepage SSL MaNo on SSL - K2XX Martes</title><link>https://ssl-utn-frba-eb.github.io/</link><description>Recent content in Homepage SSL MaNo on SSL - K2XX Martes</description><generator>Hugo -- gohugo.io</generator><language>es</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Sun, 26 Jan 2020 04:15:05 +0900</lastBuildDate><atom:link href="https://ssl-utn-frba-eb.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>March 2022</title><link>https://ssl-utn-frba-eb.github.io/updates/2022_march/</link><pubDate>Tue, 08 Mar 2022 00:10:51 +0900</pubDate><guid>https://ssl-utn-frba-eb.github.io/updates/2022_march/</guid><description>v0.0.1 Version inicial de la pagina Agregando material bibliografico inicial Agregando estilos y personalizacion.</description></item><item><title>Etapas de un compilador</title><link>https://ssl-utn-frba-eb.github.io/material/introduccion/0.etapas_compilador/</link><pubDate>Thu, 10 Mar 2022 00:38:51 +0900</pubDate><guid>https://ssl-utn-frba-eb.github.io/material/introduccion/0.etapas_compilador/</guid><description>Etapas de un compilador En la compilación o interpretación de un lenguaje existen distintas etapas, desde que nosotros tenemos nuestro input hasta que generamos una salida que nos sirve la para ejecución ya sea instrucciones de máquina u otro tipo de instrucciones que nos permitan de alguna manera interpretar esas instrucciones y poder tener un resultado de la entrada computacionalmente.
Lector: que genera una estructura a partir de un input que es texto en genera, aunque puede ser a veces binario.</description></item><item><title>Tokenizers</title><link>https://ssl-utn-frba-eb.github.io/material/1.tokenizer/</link><pubDate>Thu, 10 Mar 2022 00:38:51 +0900</pubDate><guid>https://ssl-utn-frba-eb.github.io/material/1.tokenizer/</guid><description>Tokenizer/Lexer El tokenizer o analizador léxico es un módulo de nuestro compilador/intérprete/etc que lee nuestra entrada y separa esta en unidades que nuestro parser va a poder entender, dichas unidades son llamadas lexemas. Luego lo que hará el parser es validar la sintaxis de estos lexemas y decirnos si es correcta o no.
Entonces si tenemos una entrada que es como
public static class Pepita { ….. &amp;nbsp; generará lexemas de esta manera</description></item><item><title>Markdown Syntax Guide</title><link>https://ssl-utn-frba-eb.github.io/blog/markdown-syntax/</link><pubDate>Wed, 09 Mar 2022 00:00:00 +0000</pubDate><guid>https://ssl-utn-frba-eb.github.io/blog/markdown-syntax/</guid><description>&lt;p>Esta es una guia de referencia de markdown&amp;hellip;&lt;/p></description></item><item><title>Blog de SSL KXXX</title><link>https://ssl-utn-frba-eb.github.io/blog/emoji-support/</link><pubDate>Sat, 05 Mar 2022 00:00:00 +0000</pubDate><guid>https://ssl-utn-frba-eb.github.io/blog/emoji-support/</guid><description>En este blog, voy a ir dejando algunos posts que son mas bien de temas aislados que pueden ser de utilidad o curiosidad para la materia.</description></item></channel></rss>